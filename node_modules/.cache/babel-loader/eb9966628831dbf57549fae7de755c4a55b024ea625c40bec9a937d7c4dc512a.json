{"ast":null,"code":"var _jsxFileName = \"/Users/enobongoffiong/Documents/Quizzical/quizzical/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [questionNumber, setQuestionNumber] = useState(\"10\");\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [questionType, setQuestionType] = useState(\"\");\n  const [questionsList, setQuestionsList] = useState([]);\n  const answersArray = questionsList.map(question => question.correct_answer);\n  function decodeHTML(encodedString) {\n    const parser = new DOMParser();\n    const decodedString = parser.parseFromString(encodedString, \"text/html\").documentElement.textContent;\n    return decodedString;\n  }\n  const [correctAnswers, setcorrectAnswers] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = rea;\n  function compareAnswers() {\n    let score = 0;\n    for (let i = 0; i < correctAnswers.length - 1; i++) {\n      if (correctAnswers[i] === selectedAnswers[i]) {\n        score += 1;\n      }\n    }\n    setScore(score);\n    setIsSubmitted(true);\n  }\n  async function fetchData() {\n    try {\n      const response = await fetch('https://opentdb.com/api_category.php');\n      const data = await response.json();\n      const dataArray = data.trivia_categories;\n      setCategories(dataArray);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  async function getQuestions(link) {\n    try {\n      const response = await fetch(link);\n      const questions = await response.json();\n      const questionsArray = questions.results.map(question => {\n        const answers = [{\n          text: decodeHTML(question.correct_answer),\n          isCorrect: true\n        }, ...question.incorrect_answers.map(answer => ({\n          text: decodeHTML(answer),\n          isCorrect: false\n        }))];\n        const shuffledAnswers = answers.sort(() => Math.random() - 0.5);\n        return {\n          ...question,\n          question: decodeHTML(question.question),\n          correct_answer: decodeHTML(question.correct_answer),\n          shuffledAnswers\n        };\n      });\n      setQuestionsList(questionsArray);\n      setSelectedAnswers(Array(questionsArray.length).fill(null)); // Reset selected answers\n      setScore(0);\n      setIsSubmitted(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  function handleGameStarted() {\n    // setGameStarted(true);\n\n    setLoading(true); // Show a loading state for 3 seconds\n    setTimeout(() => {\n      setGameStarted(true); // Start the game after 3 seconds\n      setLoading(false);\n    }, 3000);\n  }\n  const [isPlayAgainDisabled, setIsPlayAgainDisabled] = useState(false);\n  async function handlePlayAgain() {\n    setIsPlayAgainDisabled(true); // Disable button\n    await getQuestions(url); // Fetch new questions\n\n    setTimeout(() => {\n      setIsPlayAgainDisabled(false); // Re-enable button after 4 seconds\n    }, 4000);\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (gameStarted) {\n      // setQuestionsList([])\n      getQuestions(url); // Fetch only when game actually starts\n    }\n  }, [gameStarted]);\n  useEffect(() => {\n    const correctArray = questionsList.map(question => question.correct_answer);\n    setcorrectAnswers(correctArray);\n  }, [questionsList]);\n  const urlCategory = selectedCategory ? `&category=${selectedCategory}` : \"\";\n  const urlDifficulty = difficulty ? `&difficulty=${difficulty}` : \"\";\n  const urlType = questionType ? `&type=${questionType}` : \"\";\n  const url = `https://opentdb.com/api.php?amount=${questionNumber}${urlCategory}${urlDifficulty}${urlType}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-page\",\n      children: [questionsList.map(questionObject => {\n        const answers = [{\n          text: questionObject.correct_answer,\n          isCorrect: true\n        }, ...questionObject.incorrect_answers.map(answer => ({\n          text: answer,\n          isCorrect: false\n        }))];\n        const shuffledAnswers = answers.sort(() => Math.random() - 0.5);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question\",\n            children: [`${questionsList.indexOf(questionObject) + 1}.`, \" \", questionObject.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), questionObject.shuffledAnswers.map(shuffledAnswer => {\n            const isSelected = selectedAnswers[questionsList.indexOf(questionObject)] === shuffledAnswer.text;\n            const isCorrect = correctAnswers[questionsList.indexOf(questionObject)] === shuffledAnswer.text;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (!isSubmitted) {\n                  const updatedArray = [...selectedAnswers];\n                  updatedArray[questionsList.indexOf(questionObject)] = shuffledAnswer.text;\n                  setSelectedAnswers(updatedArray);\n                }\n              },\n              className: `answer-choice ${isSubmitted ? isCorrect ? \"correct\" : isSelected ? \"incorrect\" : \"unselected\" : isSelected ? \"clicked\" : \"\"}`,\n              children: shuffledAnswer.text\n            }, `${questionsList.indexOf(questionObject) + 1}-${shuffledAnswer.text}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-answer-btn-container\",\n        children: [!isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: compareAnswers,\n          className: \"check-answers-btn\",\n          children: \"Check Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 26\n        }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You got \", score, \"/10 answers correct\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 26\n        }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"check-answers-btn\",\n          onClick: () => {\n            handlePlayAgain();\n          },\n          disabled: isPlayAgainDisabled,\n          children: \"Play again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 26\n        }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"check-answers-btn\",\n          onClick: () => {\n            console.log(gameStarted);\n            setGameStarted(false);\n            setIsSubmitted(prevData => !prevData);\n          },\n          disabled: isPlayAgainDisabled,\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header\",\n          children: \"Quizzical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subheader\",\n          children: \"Let's get quizzical!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getQuestions(url),\n          children: \"Hey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log(questionsList),\n          children: \"Hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-options-container category\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"quiz-options-container-header\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-buttons\",\n            children: [{\n              id: \"\",\n              name: \"Any Category\"\n            }, ...categories].map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n              value: category.id,\n              onClick: () => setSelectedCategory(category.id),\n              className: selectedCategory === category.id ? 'selected' : 'btn-choice',\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-options-container questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"quiz-options-container-header\",\n            children: \"Number of Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-buttons\",\n            children: ['10', '20', '30', '40', '50'].map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n              value: num,\n              className: questionNumber === num ? 'selected' : 'btn-choice',\n              onClick: () => setQuestionNumber(num),\n              children: num\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-options-container difficulty\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"quiz-options-container-header\",\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-buttons\",\n            children: [\"\", \"easy\", \"medium\", \"hard\"].map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n              value: level,\n              className: difficulty === level ? 'selected' : 'btn-choice',\n              onClick: () => setDifficulty(level),\n              children: level || \"Any Difficulty\"\n            }, level, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-options-container type\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"quiz-options-container-header\",\n            children: \"Type of Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-buttons\",\n            children: [\"\", \"multiple\", \"boolean\"].map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n              value: type,\n              className: questionType === type ? 'selected' : 'btn-choice',\n              onClick: () => setQuestionType(type),\n              children: type || \"Any type\"\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-btn\",\n          onClick: handleGameStarted,\n          children: \"Start quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6zCwXJf3NVVBbT4w87zER3anex4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","categories","setCategories","gameStarted","setGameStarted","selectedCategory","setSelectedCategory","questionNumber","setQuestionNumber","difficulty","setDifficulty","questionType","setQuestionType","questionsList","setQuestionsList","answersArray","map","question","correct_answer","decodeHTML","encodedString","parser","DOMParser","decodedString","parseFromString","documentElement","textContent","correctAnswers","setcorrectAnswers","selectedAnswers","setSelectedAnswers","isSubmitted","setIsSubmitted","score","setScore","loading","setLoading","rea","compareAnswers","i","length","fetchData","response","fetch","data","json","dataArray","trivia_categories","error","console","getQuestions","link","questions","questionsArray","results","answers","text","isCorrect","incorrect_answers","answer","shuffledAnswers","sort","Math","random","Array","fill","handleGameStarted","setTimeout","isPlayAgainDisabled","setIsPlayAgainDisabled","handlePlayAgain","url","correctArray","urlCategory","urlDifficulty","urlType","className","children","questionObject","indexOf","fileName","_jsxFileName","lineNumber","columnNumber","shuffledAnswer","isSelected","onClick","updatedArray","disabled","log","prevData","id","name","category","value","num","level","type","_c","$RefreshReg$"],"sources":["/Users/enobongoffiong/Documents/Quizzical/quizzical/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n\n  const [categories, setCategories] = useState([])\n  const [gameStarted, setGameStarted] = useState(false)\n\n  const [selectedCategory, setSelectedCategory] = useState(\"\")\n  const [questionNumber, setQuestionNumber] = useState(\"10\")\n  const [difficulty, setDifficulty] = useState(\"\")\n  const [questionType, setQuestionType] = useState(\"\")\n\n  const [questionsList , setQuestionsList] = useState([])\n  const answersArray = questionsList.map((question)=>(\n      question.correct_answer\n  ))\n  function decodeHTML(encodedString) {\n    const parser = new DOMParser();\n    const decodedString = parser.parseFromString(encodedString, \"text/html\").documentElement.textContent;\n    return decodedString;\n  }\n\n  const [correctAnswers, setcorrectAnswers] = useState([])\n  const [selectedAnswers, setSelectedAnswers]= useState([])\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0)\n\n  const [loading, setLoading] = rea\n\n  function compareAnswers(){ \n    let score = 0\n    for(let i=0; i<correctAnswers.length-1; i++){\n      if(correctAnswers[i]===selectedAnswers[i]){\n        score+=1\n      }\n    }\n    setScore(score)\n    setIsSubmitted(true)\n    \n      \n  }\n\n\n  async function fetchData(){\n    try{\n      const response = await fetch('https://opentdb.com/api_category.php')\n      const data = await response.json()\n      const dataArray = data.trivia_categories\n      setCategories(dataArray)\n    }\n    catch(error){\n      console.error('Error fetching data:', error);\n    }\n  }\n\n\nasync function getQuestions(link){\n        try{\n          \n          const response = await fetch(link)\n        const questions = await response.json()\n        const questionsArray = questions.results.map((question) => {\n          const answers = [\n              { text: decodeHTML(question.correct_answer), isCorrect: true },\n              ...question.incorrect_answers.map((answer) => ({\n                  text: decodeHTML(answer),\n                  isCorrect: false,\n              })),\n          ];\n\n          \n          const shuffledAnswers = answers.sort(() => Math.random() - 0.5);\n\n          return {\n              ...question,\n              question: decodeHTML(question.question),\n              correct_answer: decodeHTML(question.correct_answer),\n              shuffledAnswers, \n          };\n      });\n\n        setQuestionsList(questionsArray);\n        setSelectedAnswers(Array(questionsArray.length).fill(null)); // Reset selected answers\n      setScore(0)\n      setIsSubmitted(false)\n        \n       \n      }\n      catch(error){\n        console.error('Error fetching data:', error);\n      } \n}\n\n  function handleGameStarted(){\n      // setGameStarted(true);\n\n      setLoading(true); // Show a loading state for 3 seconds\n  setTimeout(() => {\n    setGameStarted(true); // Start the game after 3 seconds\n    setLoading(false);\n  }, 3000);\n  \n  }\n\n  const [isPlayAgainDisabled, setIsPlayAgainDisabled] = useState(false);\n\n  async function handlePlayAgain() {\n      setIsPlayAgainDisabled(true); // Disable button\n      await getQuestions(url); // Fetch new questions\n  \n      setTimeout(() => {\n          setIsPlayAgainDisabled(false); // Re-enable button after 4 seconds\n      }, 4000);\n  }\n  useEffect(() =>{ \n    fetchData()\n  },[])\n\n  useEffect(() => {\n    if (gameStarted) {\n      // setQuestionsList([])\n      getQuestions(url); // Fetch only when game actually starts\n    }\n  }, [gameStarted]);\n\n  useEffect(() => {\n    const correctArray = questionsList.map((question) => question.correct_answer);\n    setcorrectAnswers(correctArray);\n  }, [questionsList]);\n\n  const urlCategory = selectedCategory ? `&category=${selectedCategory}` : \"\"\n  const urlDifficulty = difficulty ? `&difficulty=${difficulty}` : \"\"\n  const urlType = questionType ? `&type=${questionType}` : \"\"\n\n\n const url = `https://opentdb.com/api.php?amount=${questionNumber}${urlCategory}${urlDifficulty}${urlType}`\n\n\n  \n  return (\n    <div className=\"App\">\n      \n      {\n      gameStarted ? \n      \n      <div className='quiz-page'>\n        \n        {\n        questionsList.map((questionObject)=>{\n\n          const answers = [\n            { text: questionObject.correct_answer, isCorrect: true },\n            ...questionObject.incorrect_answers.map((answer) => (\n              {\n                text: answer,\n                isCorrect: false,\n              })),\n           ]\n\n           const shuffledAnswers = answers.sort(() => Math.random() - 0.5);\n\n          return(\n          <div className='question-container'>\n            <p className='question'>{`${questionsList.indexOf(questionObject)+1}.`} {questionObject.question}</p>\n            \n            {\n            questionObject.shuffledAnswers.map((shuffledAnswer) => {\n              const isSelected = selectedAnswers[questionsList.indexOf(questionObject)] === shuffledAnswer.text;\n              const isCorrect = correctAnswers[questionsList.indexOf(questionObject)] === shuffledAnswer.text;\n              return(\n                <button \n              key={`${questionsList.indexOf(questionObject)+1}-${shuffledAnswer.text}`}\n             \n               onClick={()=>{\n                  if(!isSubmitted){\n                    const updatedArray=[...selectedAnswers]\n                  updatedArray[questionsList.indexOf(questionObject)] = shuffledAnswer.text\n                  setSelectedAnswers(updatedArray)\n                  }\n                  \n    \n               }}\n              className={`answer-choice ${\n                isSubmitted\n                  ? isCorrect\n                    ? \"correct\"\n                    : isSelected\n                    ? \"incorrect\"\n                    : \"unselected\"\n                  : isSelected ? \"clicked\": \"\" }`}\n              >\n                {shuffledAnswer.text}</button>\n              )\n              \n        })}\n            \n            </div>\n          )\n      })\n        }\n        <div className='check-answer-btn-container'>\n        {!isSubmitted && <button onClick={compareAnswers} className='check-answers-btn'>\n            Check Answers\n        </button>}\n\n        {\n          isSubmitted && <p>\n            You got {score}/10 answers correct\n          </p>\n        }\n\n        {\n          isSubmitted && <button className='check-answers-btn' onClick={()=>{handlePlayAgain()}\n            \n            \n          } disabled={isPlayAgainDisabled}>Play again</button> \n        }\n        {\n          isSubmitted && <button className='check-answers-btn' onClick={()=>{\n            console.log(gameStarted)\n            setGameStarted(false)\n            setIsSubmitted((prevData)=>!prevData)\n            \n          } } disabled={isPlayAgainDisabled}>Menu</button> \n        }\n        </div>\n       \n        \n      </div>\n      \n      \n      :\n      <main>\n      <div className='header-container'>\n        <h1 className='header'>Quizzical</h1>\n        <p className='subheader'>Let's get quizzical!</p>\n        <button onClick={()=>getQuestions(url)}>Hey</button>\n        <button onClick={()=>console.log(questionsList)}>Hi</button>\n      </div>\n    \n      <div className='container-container'>\n        <div className='quiz-options-container category'>\n          <h3 className='quiz-options-container-header'>Category</h3>\n          <div className='container-buttons'>\n          {/* <button \n              onClick={()=> setSelectedCategory(\"\")}\n               value=\"Any category\"\n               className={selectedCategory === \"\" ? 'selected' : 'btn-choice'}\n               >Any category</button> */}\n              {\n                  [{id: \"\", name: \"Any Category\"},...categories].map((category) => (\n                    <button \n                    key = {category.id}\n                    value={category.id} \n                    onClick = {()=>setSelectedCategory(category.id)}\n                    className={selectedCategory === category.id ? 'selected' : 'btn-choice'}>\n                      {category.name }\n                      </button>\n                  ))\n              }\n          </div>\n        </div>\n\n        <div className='quiz-options-container questions'>\n          <h3 className='quiz-options-container-header'>Number of Questions</h3>\n          <div className='container-buttons'>\n          {['10', '20', '30', '40', '50'].map((num) => (\n                  <button\n                    key={num}\n                    value={num}\n                    className={questionNumber === num ? 'selected' : 'btn-choice'}\n                    onClick={() => setQuestionNumber(num)}\n                  >\n                    {num}\n                  </button>\n             )) }\n          </div>\n        \n        </div>\n\n        <div className='quiz-options-container difficulty'>\n          <h3 className='quiz-options-container-header'>Difficulty</h3>\n          <div className='container-buttons'>\n            {\n              [\"\", \"easy\", \"medium\", \"hard\"].map((level)=>\n              (\n                <button\n                  key={level}\n                  value={level}\n                  className={difficulty === level ? 'selected' : 'btn-choice'}\n                  onClick={()=>setDifficulty(level)}>\n                  {level || \"Any Difficulty\"}\n                </button>\n              ))\n            }\n          </div>\n          \n        </div>\n\n        <div className='quiz-options-container type'>\n          <h3 className='quiz-options-container-header'>Type of Question</h3>\n          <div className='container-buttons'>\n            {[\"\", \"multiple\", \"boolean\"].map((type)=> (\n              <button value={type}\n              key={type}\n              className= {questionType === type ? 'selected' : 'btn-choice'}\n              onClick={()=> setQuestionType(type)}>\n                {type || \"Any type\"}\n                </button>\n            ))\n                \n          }\n          </div>\n          \n        </div>\n\n        \n      </div>\n      <div className='button-container'>\n          <button className='start-btn' onClick={handleGameStarted}>Start quiz</button>\n      </div>\n      </main>\n}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM,CAACkB,aAAa,EAAGC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAMoB,YAAY,GAAGF,aAAa,CAACG,GAAG,CAAEC,QAAQ,IAC5CA,QAAQ,CAACC,cACZ,CAAC;EACF,SAASC,UAAUA,CAACC,aAAa,EAAE;IACjC,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;IAC9B,MAAMC,aAAa,GAAGF,MAAM,CAACG,eAAe,CAACJ,aAAa,EAAE,WAAW,CAAC,CAACK,eAAe,CAACC,WAAW;IACpG,OAAOH,aAAa;EACtB;EAEA,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkC,eAAe,EAAEC,kBAAkB,CAAC,GAAEnC,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAM,CAACwC,OAAO,EAAEC,UAAU,CAAC,GAAGC,GAAG;EAEjC,SAASC,cAAcA,CAAA,EAAE;IACvB,IAAIL,KAAK,GAAG,CAAC;IACb,KAAI,IAAIM,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACZ,cAAc,CAACa,MAAM,GAAC,CAAC,EAAED,CAAC,EAAE,EAAC;MAC1C,IAAGZ,cAAc,CAACY,CAAC,CAAC,KAAGV,eAAe,CAACU,CAAC,CAAC,EAAC;QACxCN,KAAK,IAAE,CAAC;MACV;IACF;IACAC,QAAQ,CAACD,KAAK,CAAC;IACfD,cAAc,CAAC,IAAI,CAAC;EAGtB;EAGA,eAAeS,SAASA,CAAA,EAAE;IACxB,IAAG;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,SAAS,GAAGF,IAAI,CAACG,iBAAiB;MACxC7C,aAAa,CAAC4C,SAAS,CAAC;IAC1B,CAAC,CACD,OAAME,KAAK,EAAC;MACVC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF;EAGF,eAAeE,YAAYA,CAACC,IAAI,EAAC;IACzB,IAAG;MAED,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAACQ,IAAI,CAAC;MACpC,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACG,IAAI,CAAC,CAAC;MACvC,MAAMQ,cAAc,GAAGD,SAAS,CAACE,OAAO,CAACtC,GAAG,CAAEC,QAAQ,IAAK;QACzD,MAAMsC,OAAO,GAAG,CACZ;UAAEC,IAAI,EAAErC,UAAU,CAACF,QAAQ,CAACC,cAAc,CAAC;UAAEuC,SAAS,EAAE;QAAK,CAAC,EAC9D,GAAGxC,QAAQ,CAACyC,iBAAiB,CAAC1C,GAAG,CAAE2C,MAAM,KAAM;UAC3CH,IAAI,EAAErC,UAAU,CAACwC,MAAM,CAAC;UACxBF,SAAS,EAAE;QACf,CAAC,CAAC,CAAC,CACN;QAGD,MAAMG,eAAe,GAAGL,OAAO,CAACM,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAE/D,OAAO;UACH,GAAG9C,QAAQ;UACXA,QAAQ,EAAEE,UAAU,CAACF,QAAQ,CAACA,QAAQ,CAAC;UACvCC,cAAc,EAAEC,UAAU,CAACF,QAAQ,CAACC,cAAc,CAAC;UACnD0C;QACJ,CAAC;MACL,CAAC,CAAC;MAEA9C,gBAAgB,CAACuC,cAAc,CAAC;MAChCvB,kBAAkB,CAACkC,KAAK,CAACX,cAAc,CAACb,MAAM,CAAC,CAACyB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC/D/B,QAAQ,CAAC,CAAC,CAAC;MACXF,cAAc,CAAC,KAAK,CAAC;IAGrB,CAAC,CACD,OAAMgB,KAAK,EAAC;MACVC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACN;EAEE,SAASkB,iBAAiBA,CAAA,EAAE;IACxB;;IAEA9B,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACtB+B,UAAU,CAAC,MAAM;MACf/D,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MACtBgC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EAER;EAEA,MAAM,CAACgC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG1E,QAAQ,CAAC,KAAK,CAAC;EAErE,eAAe2E,eAAeA,CAAA,EAAG;IAC7BD,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9B,MAAMnB,YAAY,CAACqB,GAAG,CAAC,CAAC,CAAC;;IAEzBJ,UAAU,CAAC,MAAM;MACbE,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,IAAI,CAAC;EACZ;EACAzE,SAAS,CAAC,MAAK;IACb6C,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;EAEL7C,SAAS,CAAC,MAAM;IACd,IAAIO,WAAW,EAAE;MACf;MACA+C,YAAY,CAACqB,GAAG,CAAC,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACpE,WAAW,CAAC,CAAC;EAEjBP,SAAS,CAAC,MAAM;IACd,MAAM4E,YAAY,GAAG3D,aAAa,CAACG,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,cAAc,CAAC;IAC7EU,iBAAiB,CAAC4C,YAAY,CAAC;EACjC,CAAC,EAAE,CAAC3D,aAAa,CAAC,CAAC;EAEnB,MAAM4D,WAAW,GAAGpE,gBAAgB,GAAG,aAAaA,gBAAgB,EAAE,GAAG,EAAE;EAC3E,MAAMqE,aAAa,GAAGjE,UAAU,GAAG,eAAeA,UAAU,EAAE,GAAG,EAAE;EACnE,MAAMkE,OAAO,GAAGhE,YAAY,GAAG,SAASA,YAAY,EAAE,GAAG,EAAE;EAG5D,MAAM4D,GAAG,GAAG,sCAAsChE,cAAc,GAAGkE,WAAW,GAAGC,aAAa,GAAGC,OAAO,EAAE;EAIzG,oBACE7E,OAAA;IAAK8E,SAAS,EAAC,KAAK;IAAAC,QAAA,EAGlB1E,WAAW,gBAEXL,OAAA;MAAK8E,SAAS,EAAC,WAAW;MAAAC,QAAA,GAGxBhE,aAAa,CAACG,GAAG,CAAE8D,cAAc,IAAG;QAElC,MAAMvB,OAAO,GAAG,CACd;UAAEC,IAAI,EAAEsB,cAAc,CAAC5D,cAAc;UAAEuC,SAAS,EAAE;QAAK,CAAC,EACxD,GAAGqB,cAAc,CAACpB,iBAAiB,CAAC1C,GAAG,CAAE2C,MAAM,KAC7C;UACEH,IAAI,EAAEG,MAAM;UACZF,SAAS,EAAE;QACb,CAAC,CAAC,CAAC,CACL;QAED,MAAMG,eAAe,GAAGL,OAAO,CAACM,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAEhE,oBACAjE,OAAA;UAAK8E,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjC/E,OAAA;YAAG8E,SAAS,EAAC,UAAU;YAAAC,QAAA,GAAE,GAAGhE,aAAa,CAACkE,OAAO,CAACD,cAAc,CAAC,GAAC,CAAC,GAAG,EAAC,GAAC,EAACA,cAAc,CAAC7D,QAAQ;UAAA;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAGrGL,cAAc,CAAClB,eAAe,CAAC5C,GAAG,CAAEoE,cAAc,IAAK;YACrD,MAAMC,UAAU,GAAGxD,eAAe,CAAChB,aAAa,CAACkE,OAAO,CAACD,cAAc,CAAC,CAAC,KAAKM,cAAc,CAAC5B,IAAI;YACjG,MAAMC,SAAS,GAAG9B,cAAc,CAACd,aAAa,CAACkE,OAAO,CAACD,cAAc,CAAC,CAAC,KAAKM,cAAc,CAAC5B,IAAI;YAC/F,oBACE1D,OAAA;cAGDwF,OAAO,EAAEA,CAAA,KAAI;gBACV,IAAG,CAACvD,WAAW,EAAC;kBACd,MAAMwD,YAAY,GAAC,CAAC,GAAG1D,eAAe,CAAC;kBACzC0D,YAAY,CAAC1E,aAAa,CAACkE,OAAO,CAACD,cAAc,CAAC,CAAC,GAAGM,cAAc,CAAC5B,IAAI;kBACzE1B,kBAAkB,CAACyD,YAAY,CAAC;gBAChC;cAGH,CAAE;cACHX,SAAS,EAAE,iBACT7C,WAAW,GACP0B,SAAS,GACP,SAAS,GACT4B,UAAU,GACV,WAAW,GACX,YAAY,GACdA,UAAU,GAAG,SAAS,GAAE,EAAE,EAAI;cAAAR,QAAA,EAEjCO,cAAc,CAAC5B;YAAI,GApBjB,GAAG3C,aAAa,CAACkE,OAAO,CAACD,cAAc,CAAC,GAAC,CAAC,IAAIM,cAAc,CAAC5B,IAAI,EAAE;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoBzC,CAAC;UAGtC,CAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEO,CAAC;MAEZ,CAAC,CAAC,eAEArF,OAAA;QAAK8E,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAC1C,CAAC9C,WAAW,iBAAIjC,OAAA;UAAQwF,OAAO,EAAEhD,cAAe;UAACsC,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAEhF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAGPpD,WAAW,iBAAIjC,OAAA;UAAA+E,QAAA,GAAG,UACR,EAAC5C,KAAK,EAAC,qBACjB;QAAA;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EAIJpD,WAAW,iBAAIjC,OAAA;UAAQ8E,SAAS,EAAC,mBAAmB;UAACU,OAAO,EAAEA,CAAA,KAAI;YAAChB,eAAe,CAAC,CAAC;UAAA,CAGnF;UAACkB,QAAQ,EAAEpB,mBAAoB;UAAAS,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAGpDpD,WAAW,iBAAIjC,OAAA;UAAQ8E,SAAS,EAAC,mBAAmB;UAACU,OAAO,EAAEA,CAAA,KAAI;YAChErC,OAAO,CAACwC,GAAG,CAACtF,WAAW,CAAC;YACxBC,cAAc,CAAC,KAAK,CAAC;YACrB4B,cAAc,CAAE0D,QAAQ,IAAG,CAACA,QAAQ,CAAC;UAEvC,CAAG;UAACF,QAAQ,EAAEpB,mBAAoB;UAAAS,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGH,CAAC,gBAINrF,OAAA;MAAA+E,QAAA,gBACA/E,OAAA;QAAK8E,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B/E,OAAA;UAAI8E,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCrF,OAAA;UAAG8E,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjDrF,OAAA;UAAQwF,OAAO,EAAEA,CAAA,KAAIpC,YAAY,CAACqB,GAAG,CAAE;UAAAM,QAAA,EAAC;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpDrF,OAAA;UAAQwF,OAAO,EAAEA,CAAA,KAAIrC,OAAO,CAACwC,GAAG,CAAC5E,aAAa,CAAE;UAAAgE,QAAA,EAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eAENrF,OAAA;QAAK8E,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClC/E,OAAA;UAAK8E,SAAS,EAAC,iCAAiC;UAAAC,QAAA,gBAC9C/E,OAAA;YAAI8E,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3DrF,OAAA;YAAK8E,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAO1B,CAAC;cAACc,EAAE,EAAE,EAAE;cAAEC,IAAI,EAAE;YAAc,CAAC,EAAC,GAAG3F,UAAU,CAAC,CAACe,GAAG,CAAE6E,QAAQ,iBAC1D/F,OAAA;cAEAgG,KAAK,EAAED,QAAQ,CAACF,EAAG;cACnBL,OAAO,EAAIA,CAAA,KAAIhF,mBAAmB,CAACuF,QAAQ,CAACF,EAAE,CAAE;cAChDf,SAAS,EAAEvE,gBAAgB,KAAKwF,QAAQ,CAACF,EAAE,GAAG,UAAU,GAAG,YAAa;cAAAd,QAAA,EACrEgB,QAAQ,CAACD;YAAI,GAJTC,QAAQ,CAACF,EAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKR,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrF,OAAA;UAAK8E,SAAS,EAAC,kCAAkC;UAAAC,QAAA,gBAC/C/E,OAAA;YAAI8E,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtErF,OAAA;YAAK8E,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EACjC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC7D,GAAG,CAAE+E,GAAG,iBAChCjG,OAAA;cAEEgG,KAAK,EAAEC,GAAI;cACXnB,SAAS,EAAErE,cAAc,KAAKwF,GAAG,GAAG,UAAU,GAAG,YAAa;cAC9DT,OAAO,EAAEA,CAAA,KAAM9E,iBAAiB,CAACuF,GAAG,CAAE;cAAAlB,QAAA,EAErCkB;YAAG,GALCA,GAAG;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMF,CACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC,eAENrF,OAAA;UAAK8E,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChD/E,OAAA;YAAI8E,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7DrF,OAAA;YAAK8E,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAE9B,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC7D,GAAG,CAAEgF,KAAK,iBAEvClG,OAAA;cAEEgG,KAAK,EAAEE,KAAM;cACbpB,SAAS,EAAEnE,UAAU,KAAKuF,KAAK,GAAG,UAAU,GAAG,YAAa;cAC5DV,OAAO,EAAEA,CAAA,KAAI5E,aAAa,CAACsF,KAAK,CAAE;cAAAnB,QAAA,EACjCmB,KAAK,IAAI;YAAgB,GAJrBA,KAAK;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKJ,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAED,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC,eAENrF,OAAA;UAAK8E,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC1C/E,OAAA;YAAI8E,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAgB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnErF,OAAA;YAAK8E,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC/B,CAAC,EAAE,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC7D,GAAG,CAAEiF,IAAI,iBACpCnG,OAAA;cAAQgG,KAAK,EAAEG,IAAK;cAEpBrB,SAAS,EAAGjE,YAAY,KAAKsF,IAAI,GAAG,UAAU,GAAG,YAAa;cAC9DX,OAAO,EAAEA,CAAA,KAAK1E,eAAe,CAACqF,IAAI,CAAE;cAAApB,QAAA,EACjCoB,IAAI,IAAI;YAAU,GAHhBA,IAAI;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIC,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGH,CAAC,eACNrF,OAAA;QAAK8E,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC7B/E,OAAA;UAAQ8E,SAAS,EAAC,WAAW;UAACU,OAAO,EAAEpB,iBAAkB;UAAAW,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAACnF,EAAA,CAnUQD,GAAG;AAAAmG,EAAA,GAAHnG,GAAG;AAqUZ,eAAeA,GAAG;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}