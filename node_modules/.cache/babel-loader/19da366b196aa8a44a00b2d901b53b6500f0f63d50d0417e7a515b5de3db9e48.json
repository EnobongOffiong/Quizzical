{"ast":null,"code":"var _jsxFileName = \"/Users/enobongoffiong/Documents/Quizzical/quizzical/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [questionNumber, setQuestionNumber] = useState(\"10\");\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [questionType, setQuestionType] = useState(\"\");\n  const [correctAnswers, setcorrectAnswers] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [firstClick, setFirstClick] = useState(true);\n  const [questionsList, setQuestionsList] = useState([]);\n  const [isPlayAgainDisabled, setIsPlayAgainDisabled] = useState(false);\n  const answersArray = questionsList.map(question => question.correct_answer);\n  const urlCategory = selectedCategory ? `&category=${selectedCategory}` : \"\";\n  const urlDifficulty = difficulty ? `&difficulty=${difficulty}` : \"\";\n  const urlType = questionType ? `&type=${questionType}` : \"\";\n  const url = `https://opentdb.com/api.php?amount=${questionNumber}${urlCategory}${urlDifficulty}${urlType}`;\n  function decodeHTML(encodedString) {\n    const parser = new DOMParser();\n    const decodedString = parser.parseFromString(encodedString, \"text/html\").documentElement.textContent;\n    return decodedString;\n  }\n  function compareAnswers() {\n    let score = 0;\n    for (let i = 0; i < correctAnswers.length - 1; i++) {\n      if (correctAnswers[i] === selectedAnswers[i]) {\n        score += 1;\n      }\n    }\n    setScore(score);\n    setIsSubmitted(true);\n    setIsPlayAgainDisabled(true);\n    setTimeout(() => {\n      setIsPlayAgainDisabled(false);\n    }, 4000);\n  }\n  function handleMenu() {\n    setGameStarted(false);\n    setIsSubmitted(false);\n    setFirstClick(true);\n    setIsPlayAgainDisabled(true);\n    setTimeout(() => {\n      setIsPlayAgainDisabled(false);\n    }, 4000);\n  }\n  function handleGameStarted() {\n    if (firstClick) {\n      setGameStarted(true);\n      setFirstClick(false);\n    } else {\n      setLoading(true);\n      setTimeout(() => {\n        setGameStarted(true);\n        setLoading(false);\n      }, 3000);\n    }\n  }\n  async function fetchData() {\n    try {\n      const response = await fetch('https://opentdb.com/api_category.php');\n      const data = await response.json();\n      const dataArray = data.trivia_categories;\n      setCategories(dataArray);\n      console.log(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  async function getQuestions(link) {\n    try {\n      setQuestionsList([]);\n      const response = await fetch(link);\n      const questions = await response.json();\n      const questionsArray = questions.results.map(question => {\n        const answers = [{\n          text: decodeHTML(question.correct_answer),\n          isCorrect: true\n        }, ...question.incorrect_answers.map(answer => ({\n          text: decodeHTML(answer),\n          isCorrect: false\n        }))];\n        const shuffledAnswers = answers.sort(() => Math.random() - 0.5);\n        return {\n          ...question,\n          question: decodeHTML(question.question),\n          correct_answer: decodeHTML(question.correct_answer),\n          shuffledAnswers\n        };\n      });\n      setQuestionsList(questionsArray);\n      setSelectedAnswers(Array(questionsArray.length).fill(null)); // Reset selected answers\n      setScore(0);\n      setIsSubmitted(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  async function handlePlayAgain() {\n    setIsPlayAgainDisabled(true);\n    await getQuestions(url);\n    setTimeout(() => {\n      setIsPlayAgainDisabled(false);\n    }, 4000);\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (gameStarted) {\n      getQuestions(url);\n    }\n  }, [gameStarted]);\n  useEffect(() => {\n    const correctArray = questionsList.map(question => question.correct_answer);\n    setcorrectAnswers(correctArray);\n  }, [questionsList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-page\",\n      children: [questionsList.map(questionObject => {\n        const answers = [{\n          text: questionObject.correct_answer,\n          isCorrect: true\n        }, ...questionObject.incorrect_answers.map(answer => ({\n          text: answer,\n          isCorrect: false\n        }))];\n        const shuffledAnswers = answers.sort(() => Math.random() - 0.5);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question\",\n            children: [`${questionsList.indexOf(questionObject) + 1}.`, \" \", questionObject.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), questionObject.shuffledAnswers.map(shuffledAnswer => {\n            const isSelected = selectedAnswers[questionsList.indexOf(questionObject)] === shuffledAnswer.text;\n            const isCorrect = correctAnswers[questionsList.indexOf(questionObject)] === shuffledAnswer.text;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (!isSubmitted) {\n                  const updatedArray = [...selectedAnswers];\n                  updatedArray[questionsList.indexOf(questionObject)] = shuffledAnswer.text;\n                  setSelectedAnswers(updatedArray);\n                }\n              },\n              className: `answer-choice ${isSubmitted ? isCorrect ? \"correct\" : isSelected ? \"incorrect\" : \"unselected\" : isSelected ? \"clicked\" : \"\"}`,\n              children: shuffledAnswer.text\n            }, `${questionsList.indexOf(questionObject) + 1}-${shuffledAnswer.text}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-answer-btn-container\",\n        children: [!isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: compareAnswers,\n          className: \"check-answers-btn\",\n          children: \"Check Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 28\n        }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You got \", score, \"/10 answers correct\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 28\n        }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"check-answers-btn\",\n          onClick: () => {\n            handlePlayAgain();\n          },\n          disabled: isPlayAgainDisabled,\n          children: \"Play again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 28\n        }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"check-answers-btn\",\n          onClick: handleMenu,\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header\",\n          children: \"Quizzical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subheader\",\n          children: \"Let's get quizzical!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-options-container category\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"quiz-options-container-header\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-buttons\",\n            children: [{\n              id: \"\",\n              name: \"Any Category\"\n            }, ...categories].map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n              value: category.id,\n              onClick: () => setSelectedCategory(category.id),\n              className: selectedCategory === category.id ? 'selected' : 'btn-choice',\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-options-container questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"quiz-options-container-header\",\n            children: \"Number of Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-buttons\",\n            children: ['10', '20', '30', '40', '50'].map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n              value: num,\n              className: questionNumber === num ? 'selected' : 'btn-choice',\n              onClick: () => setQuestionNumber(num),\n              children: num\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-options-container difficulty\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"quiz-options-container-header\",\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-buttons\",\n            children: [\"\", \"easy\", \"medium\", \"hard\"].map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n              value: level,\n              className: difficulty === level ? 'selected' : 'btn-choice',\n              onClick: () => setDifficulty(level),\n              children: level || \"Any Difficulty\"\n            }, level, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-options-container type\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"quiz-options-container-header\",\n            children: \"Type of Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-buttons\",\n            children: [\"\", \"multiple\", \"boolean\"].map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n              value: type,\n              className: questionType === type ? 'selected' : 'btn-choice',\n              onClick: () => setQuestionType(type),\n              children: type || \"Any type\"\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-btn\",\n          onClick: handleGameStarted,\n          disabled: isPlayAgainDisabled,\n          children: \"Start quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4zhmj/6E08thu9WO06fHhzsb76U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","categories","setCategories","gameStarted","setGameStarted","selectedCategory","setSelectedCategory","questionNumber","setQuestionNumber","difficulty","setDifficulty","questionType","setQuestionType","correctAnswers","setcorrectAnswers","selectedAnswers","setSelectedAnswers","isSubmitted","setIsSubmitted","score","setScore","loading","setLoading","firstClick","setFirstClick","questionsList","setQuestionsList","isPlayAgainDisabled","setIsPlayAgainDisabled","answersArray","map","question","correct_answer","urlCategory","urlDifficulty","urlType","url","decodeHTML","encodedString","parser","DOMParser","decodedString","parseFromString","documentElement","textContent","compareAnswers","i","length","setTimeout","handleMenu","handleGameStarted","fetchData","response","fetch","data","json","dataArray","trivia_categories","console","log","error","getQuestions","link","questions","questionsArray","results","answers","text","isCorrect","incorrect_answers","answer","shuffledAnswers","sort","Math","random","Array","fill","handlePlayAgain","correctArray","className","children","questionObject","indexOf","fileName","_jsxFileName","lineNumber","columnNumber","shuffledAnswer","isSelected","onClick","updatedArray","disabled","id","name","category","value","num","level","type","_c","$RefreshReg$"],"sources":["/Users/enobongoffiong/Documents/Quizzical/quizzical/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n\n  const [categories, setCategories] = useState([])\n  const [gameStarted, setGameStarted] = useState(false)\n  const [selectedCategory, setSelectedCategory] = useState(\"\")\n  const [questionNumber, setQuestionNumber] = useState(\"10\")\n  const [difficulty, setDifficulty] = useState(\"\")\n  const [questionType, setQuestionType] = useState(\"\")\n  const [correctAnswers, setcorrectAnswers] = useState([])\n  const [selectedAnswers, setSelectedAnswers]= useState([])\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const [firstClick, setFirstClick] = useState(true);\n  const [questionsList , setQuestionsList] = useState([])\n  const [isPlayAgainDisabled, setIsPlayAgainDisabled] = useState(false);\n\n  const answersArray = questionsList.map((question)=>(\n      question.correct_answer\n  ))\n\n  const urlCategory = selectedCategory ? `&category=${selectedCategory}` : \"\"\n  const urlDifficulty = difficulty ? `&difficulty=${difficulty}` : \"\"\n  const urlType = questionType ? `&type=${questionType}` : \"\"\n  \n const url = `https://opentdb.com/api.php?amount=${questionNumber}${urlCategory}${urlDifficulty}${urlType}`\n\n  function decodeHTML(encodedString) {\n    const parser = new DOMParser();\n    const decodedString = parser.parseFromString(encodedString, \"text/html\").documentElement.textContent;\n    return decodedString;\n  }\n\n  function compareAnswers(){ \n    let score = 0\n    for(let i=0; i<correctAnswers.length-1; i++){\n      if(correctAnswers[i]===selectedAnswers[i]){\n        score+=1\n      }\n    }\n    setScore(score)\n    setIsSubmitted(true)\n    setIsPlayAgainDisabled(true);\n\n    setTimeout(() => {\n        setIsPlayAgainDisabled(false);\n    }, 4000);\n      \n  }\n\n  function handleMenu() {\n    setGameStarted(false);\n    setIsSubmitted(false);\n    setFirstClick(true);\n    setIsPlayAgainDisabled(true);\n\n    setTimeout(() => {\n        setIsPlayAgainDisabled(false);\n    }, 4000);\n\n  }\n\n  function handleGameStarted(){\n    if (firstClick) {\n      setGameStarted(true);\n      setFirstClick(false);\n    }\n    else{\n      setLoading(true);\n\n      setTimeout(() => {\n        setGameStarted(true);\n        setLoading(false);\n      }, 3000);\n    }\n\n  \n  \n  }\n\n  async function fetchData(){\n    try{\n      const response = await fetch('https://opentdb.com/api_category.php')\n      const data = await response.json()\n      const dataArray = data.trivia_categories\n      setCategories(dataArray)\n      console.log(data)\n    }\n    catch(error){\n      console.error('Error fetching data:', error);\n    }\n\n   \n  }\n\n  async function getQuestions(link){\n        try{\n          setQuestionsList([])\n          const response = await fetch(link)\n        const questions = await response.json()\n        const questionsArray = questions.results.map((question) => {\n          const answers = [\n              { text: decodeHTML(question.correct_answer), isCorrect: true },\n              ...question.incorrect_answers.map((answer) => ({\n                  text: decodeHTML(answer),\n                  isCorrect: false,\n              })),\n          ];\n\n          const shuffledAnswers = answers.sort(() => Math.random() - 0.5);\n\n          return {\n              ...question,\n              question: decodeHTML(question.question),\n              correct_answer: decodeHTML(question.correct_answer),\n              shuffledAnswers, \n          };\n      });\n\n        setQuestionsList(questionsArray);\n        setSelectedAnswers(Array(questionsArray.length).fill(null)); // Reset selected answers\n        setScore(0)\n        setIsSubmitted(false)\n        \n      }\n      catch(error){\n        console.error('Error fetching data:', error);\n      } \n  }\n\n  async function handlePlayAgain() {\n      setIsPlayAgainDisabled(true); \n      await getQuestions(url); \n  \n      setTimeout(() => {\n          setIsPlayAgainDisabled(false);\n      }, 4000);\n  }\n\n  useEffect(() =>{ \n    fetchData()\n  },[])\n\n  useEffect(() => {\n    if (gameStarted) {\n      getQuestions(url); \n    }\n  }, [gameStarted]);\n\n  useEffect(() => {\n    const correctArray = questionsList.map((question) => question.correct_answer);\n    setcorrectAnswers(correctArray);\n  }, [questionsList]);\n\n  return (\n    <div className=\"App\">\n      \n      {\n        gameStarted ? \n        \n        <div className='quiz-page'>\n          \n          {\n          questionsList.map((questionObject)=>{\n            const answers = [\n              { text: questionObject.correct_answer, isCorrect: true },\n              ...questionObject.incorrect_answers.map((answer) => (\n                {\n                  text: answer,\n                  isCorrect: false,\n                })),\n            ]\n\n            const shuffledAnswers = answers.sort(() => Math.random() - 0.5);\n\n            return(\n            <div className='question-container'>\n              <p className='question'>{`${questionsList.indexOf(questionObject)+1}.`} {questionObject.question}</p>\n              \n              {\n              questionObject.shuffledAnswers.map((shuffledAnswer) => {\n                const isSelected = selectedAnswers[questionsList.indexOf(questionObject)] === shuffledAnswer.text;\n                const isCorrect = correctAnswers[questionsList.indexOf(questionObject)] === shuffledAnswer.text;\n                return(\n                  <button \n                key={`${questionsList.indexOf(questionObject)+1}-${shuffledAnswer.text}`}\n                onClick={()=>{\n                    if(!isSubmitted){\n                      const updatedArray=[...selectedAnswers]\n                    updatedArray[questionsList.indexOf(questionObject)] = shuffledAnswer.text\n                    setSelectedAnswers(updatedArray)\n                    }\n                }}\n                className={`answer-choice ${\n                  isSubmitted\n                    ? isCorrect\n                      ? \"correct\"\n                      : isSelected\n                      ? \"incorrect\"\n                      : \"unselected\"\n                    : isSelected ? \"clicked\": \"\" }`}\n                >\n                  {shuffledAnswer.text}</button>\n                )\n              })}\n              \n            </div>\n            )\n        })\n          }\n\n          <div className='check-answer-btn-container'>\n          {!isSubmitted && <button onClick={compareAnswers} className='check-answers-btn'>\n              Check Answers\n          </button>}\n\n          {\n            isSubmitted && <p>\n              You got {score}/10 answers correct\n            </p>\n          }\n\n          {\n            isSubmitted && <button \n            className='check-answers-btn' \n            onClick={()=>{handlePlayAgain()}}\n            disabled={isPlayAgainDisabled}\n            >\n            Play again\n              </button> \n          }\n          {\n            isSubmitted && <button \n              className='check-answers-btn' \n              onClick={handleMenu}\n              >\n              Menu\n                </button> \n          }\n          </div>\n        </div>\n        \n        :\n\n        <main>\n        <div className='header-container'>\n          <h1 className='header'>Quizzical</h1>\n          <p className='subheader'>Let's get quizzical!</p>\n        </div>\n      \n        <div className='container-container'>\n          <div className='quiz-options-container category'>\n            <h3 className='quiz-options-container-header'>Category</h3>\n            <div className='container-buttons'>\n    \n                {\n                    [{id: \"\", name: \"Any Category\"},...categories].map((category) => (\n                      <button \n                      key = {category.id}\n                      value={category.id} \n                      onClick = {()=>setSelectedCategory(category.id)}\n                      className={selectedCategory === category.id ? 'selected' : 'btn-choice'}>\n                        {category.name }\n                        </button>\n                    ))\n                }\n            </div>\n          </div>\n\n          <div className='quiz-options-container questions'>\n            <h3 className='quiz-options-container-header'>Number of Questions</h3>\n            <div className='container-buttons'>\n            {['10', '20', '30', '40', '50'].map((num) => (\n                    <button\n                      key={num}\n                      value={num}\n                      className={questionNumber === num ? 'selected' : 'btn-choice'}\n                      onClick={() => setQuestionNumber(num)}\n                    >\n                      {num}\n                    </button>\n              )) }\n            </div>\n          \n          </div>\n\n          <div className='quiz-options-container difficulty'>\n            <h3 className='quiz-options-container-header'>Difficulty</h3>\n            <div className='container-buttons'>\n              {\n                [\"\", \"easy\", \"medium\", \"hard\"].map((level)=>\n                (\n                  <button\n                    key={level}\n                    value={level}\n                    className={difficulty === level ? 'selected' : 'btn-choice'}\n                    onClick={()=>setDifficulty(level)}>\n                    {level || \"Any Difficulty\"}\n                  </button>\n                ))\n              }\n            </div>\n            \n          </div>\n\n          <div className='quiz-options-container type'>\n            <h3 className='quiz-options-container-header'>Type of Question</h3>\n            <div className='container-buttons'>\n              {[\"\", \"multiple\", \"boolean\"].map((type)=> (\n                <button value={type}\n                key={type}\n                className= {questionType === type ? 'selected' : 'btn-choice'}\n                onClick={()=> setQuestionType(type)}>\n                  {type || \"Any type\"}\n                  </button>\n              ))\n                  \n            }\n            </div>\n            \n          </div>\n\n          \n        </div>\n        <div className='button-container'>\n            <button \n            className='start-btn' \n            onClick={handleGameStarted} \n            disabled={isPlayAgainDisabled} >\n              Start quiz\n              </button>\n        </div>\n        </main>\n  }\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAErB,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC8B,aAAa,EAAGC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACgC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAMkC,YAAY,GAAGJ,aAAa,CAACK,GAAG,CAAEC,QAAQ,IAC5CA,QAAQ,CAACC,cACZ,CAAC;EAEF,MAAMC,WAAW,GAAG5B,gBAAgB,GAAG,aAAaA,gBAAgB,EAAE,GAAG,EAAE;EAC3E,MAAM6B,aAAa,GAAGzB,UAAU,GAAG,eAAeA,UAAU,EAAE,GAAG,EAAE;EACnE,MAAM0B,OAAO,GAAGxB,YAAY,GAAG,SAASA,YAAY,EAAE,GAAG,EAAE;EAE5D,MAAMyB,GAAG,GAAG,sCAAsC7B,cAAc,GAAG0B,WAAW,GAAGC,aAAa,GAAGC,OAAO,EAAE;EAEzG,SAASE,UAAUA,CAACC,aAAa,EAAE;IACjC,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;IAC9B,MAAMC,aAAa,GAAGF,MAAM,CAACG,eAAe,CAACJ,aAAa,EAAE,WAAW,CAAC,CAACK,eAAe,CAACC,WAAW;IACpG,OAAOH,aAAa;EACtB;EAEA,SAASI,cAAcA,CAAA,EAAE;IACvB,IAAI1B,KAAK,GAAG,CAAC;IACb,KAAI,IAAI2B,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACjC,cAAc,CAACkC,MAAM,GAAC,CAAC,EAAED,CAAC,EAAE,EAAC;MAC1C,IAAGjC,cAAc,CAACiC,CAAC,CAAC,KAAG/B,eAAe,CAAC+B,CAAC,CAAC,EAAC;QACxC3B,KAAK,IAAE,CAAC;MACV;IACF;IACAC,QAAQ,CAACD,KAAK,CAAC;IACfD,cAAc,CAAC,IAAI,CAAC;IACpBU,sBAAsB,CAAC,IAAI,CAAC;IAE5BoB,UAAU,CAAC,MAAM;MACbpB,sBAAsB,CAAC,KAAK,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC;EAEV;EAEA,SAASqB,UAAUA,CAAA,EAAG;IACpB7C,cAAc,CAAC,KAAK,CAAC;IACrBc,cAAc,CAAC,KAAK,CAAC;IACrBM,aAAa,CAAC,IAAI,CAAC;IACnBI,sBAAsB,CAAC,IAAI,CAAC;IAE5BoB,UAAU,CAAC,MAAM;MACbpB,sBAAsB,CAAC,KAAK,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC;EAEV;EAEA,SAASsB,iBAAiBA,CAAA,EAAE;IAC1B,IAAI3B,UAAU,EAAE;MACdnB,cAAc,CAAC,IAAI,CAAC;MACpBoB,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MACG;MACFF,UAAU,CAAC,IAAI,CAAC;MAEhB0B,UAAU,CAAC,MAAM;QACf5C,cAAc,CAAC,IAAI,CAAC;QACpBkB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;IACV;EAIF;EAEA,eAAe6B,SAASA,CAAA,EAAE;IACxB,IAAG;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,SAAS,GAAGF,IAAI,CAACG,iBAAiB;MACxCvD,aAAa,CAACsD,SAAS,CAAC;MACxBE,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACnB,CAAC,CACD,OAAMM,KAAK,EAAC;MACVF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EAGF;EAEA,eAAeC,YAAYA,CAACC,IAAI,EAAC;IAC3B,IAAG;MACDpC,gBAAgB,CAAC,EAAE,CAAC;MACpB,MAAM0B,QAAQ,GAAG,MAAMC,KAAK,CAACS,IAAI,CAAC;MACpC,MAAMC,SAAS,GAAG,MAAMX,QAAQ,CAACG,IAAI,CAAC,CAAC;MACvC,MAAMS,cAAc,GAAGD,SAAS,CAACE,OAAO,CAACnC,GAAG,CAAEC,QAAQ,IAAK;QACzD,MAAMmC,OAAO,GAAG,CACZ;UAAEC,IAAI,EAAE9B,UAAU,CAACN,QAAQ,CAACC,cAAc,CAAC;UAAEoC,SAAS,EAAE;QAAK,CAAC,EAC9D,GAAGrC,QAAQ,CAACsC,iBAAiB,CAACvC,GAAG,CAAEwC,MAAM,KAAM;UAC3CH,IAAI,EAAE9B,UAAU,CAACiC,MAAM,CAAC;UACxBF,SAAS,EAAE;QACf,CAAC,CAAC,CAAC,CACN;QAED,MAAMG,eAAe,GAAGL,OAAO,CAACM,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAE/D,OAAO;UACH,GAAG3C,QAAQ;UACXA,QAAQ,EAAEM,UAAU,CAACN,QAAQ,CAACA,QAAQ,CAAC;UACvCC,cAAc,EAAEK,UAAU,CAACN,QAAQ,CAACC,cAAc,CAAC;UACnDuC;QACJ,CAAC;MACL,CAAC,CAAC;MAEA7C,gBAAgB,CAACsC,cAAc,CAAC;MAChChD,kBAAkB,CAAC2D,KAAK,CAACX,cAAc,CAACjB,MAAM,CAAC,CAAC6B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7DxD,QAAQ,CAAC,CAAC,CAAC;MACXF,cAAc,CAAC,KAAK,CAAC;IAEvB,CAAC,CACD,OAAM0C,KAAK,EAAC;MACVF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACJ;EAEA,eAAeiB,eAAeA,CAAA,EAAG;IAC7BjD,sBAAsB,CAAC,IAAI,CAAC;IAC5B,MAAMiC,YAAY,CAACzB,GAAG,CAAC;IAEvBY,UAAU,CAAC,MAAM;MACbpB,sBAAsB,CAAC,KAAK,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC;EACZ;EAEAhC,SAAS,CAAC,MAAK;IACbuD,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;EAELvD,SAAS,CAAC,MAAM;IACd,IAAIO,WAAW,EAAE;MACf0D,YAAY,CAACzB,GAAG,CAAC;IACnB;EACF,CAAC,EAAE,CAACjC,WAAW,CAAC,CAAC;EAEjBP,SAAS,CAAC,MAAM;IACd,MAAMkF,YAAY,GAAGrD,aAAa,CAACK,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,cAAc,CAAC;IAC7ElB,iBAAiB,CAACgE,YAAY,CAAC;EACjC,CAAC,EAAE,CAACrD,aAAa,CAAC,CAAC;EAEnB,oBACE3B,OAAA;IAAKiF,SAAS,EAAC,KAAK;IAAAC,QAAA,EAGhB7E,WAAW,gBAEXL,OAAA;MAAKiF,SAAS,EAAC,WAAW;MAAAC,QAAA,GAGxBvD,aAAa,CAACK,GAAG,CAAEmD,cAAc,IAAG;QAClC,MAAMf,OAAO,GAAG,CACd;UAAEC,IAAI,EAAEc,cAAc,CAACjD,cAAc;UAAEoC,SAAS,EAAE;QAAK,CAAC,EACxD,GAAGa,cAAc,CAACZ,iBAAiB,CAACvC,GAAG,CAAEwC,MAAM,KAC7C;UACEH,IAAI,EAAEG,MAAM;UACZF,SAAS,EAAE;QACb,CAAC,CAAC,CAAC,CACN;QAED,MAAMG,eAAe,GAAGL,OAAO,CAACM,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAE/D,oBACA5E,OAAA;UAAKiF,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjClF,OAAA;YAAGiF,SAAS,EAAC,UAAU;YAAAC,QAAA,GAAE,GAAGvD,aAAa,CAACyD,OAAO,CAACD,cAAc,CAAC,GAAC,CAAC,GAAG,EAAC,GAAC,EAACA,cAAc,CAAClD,QAAQ;UAAA;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAGrGL,cAAc,CAACV,eAAe,CAACzC,GAAG,CAAEyD,cAAc,IAAK;YACrD,MAAMC,UAAU,GAAGzE,eAAe,CAACU,aAAa,CAACyD,OAAO,CAACD,cAAc,CAAC,CAAC,KAAKM,cAAc,CAACpB,IAAI;YACjG,MAAMC,SAAS,GAAGvD,cAAc,CAACY,aAAa,CAACyD,OAAO,CAACD,cAAc,CAAC,CAAC,KAAKM,cAAc,CAACpB,IAAI;YAC/F,oBACErE,OAAA;cAEF2F,OAAO,EAAEA,CAAA,KAAI;gBACT,IAAG,CAACxE,WAAW,EAAC;kBACd,MAAMyE,YAAY,GAAC,CAAC,GAAG3E,eAAe,CAAC;kBACzC2E,YAAY,CAACjE,aAAa,CAACyD,OAAO,CAACD,cAAc,CAAC,CAAC,GAAGM,cAAc,CAACpB,IAAI;kBACzEnD,kBAAkB,CAAC0E,YAAY,CAAC;gBAChC;cACJ,CAAE;cACFX,SAAS,EAAE,iBACT9D,WAAW,GACPmD,SAAS,GACP,SAAS,GACToB,UAAU,GACV,WAAW,GACX,YAAY,GACdA,UAAU,GAAG,SAAS,GAAE,EAAE,EAAI;cAAAR,QAAA,EAEjCO,cAAc,CAACpB;YAAI,GAjBjB,GAAG1C,aAAa,CAACyD,OAAO,CAACD,cAAc,CAAC,GAAC,CAAC,IAAIM,cAAc,CAACpB,IAAI,EAAE;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAiBzC,CAAC;UAElC,CAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEC,CAAC;MAEV,CAAC,CAAC,eAGAxF,OAAA;QAAKiF,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAC1C,CAAC/D,WAAW,iBAAInB,OAAA;UAAQ2F,OAAO,EAAE5C,cAAe;UAACkC,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAEhF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAGPrE,WAAW,iBAAInB,OAAA;UAAAkF,QAAA,GAAG,UACR,EAAC7D,KAAK,EAAC,qBACjB;QAAA;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EAIJrE,WAAW,iBAAInB,OAAA;UACfiF,SAAS,EAAC,mBAAmB;UAC7BU,OAAO,EAAEA,CAAA,KAAI;YAACZ,eAAe,CAAC,CAAC;UAAA,CAAE;UACjCc,QAAQ,EAAEhE,mBAAoB;UAAAqD,QAAA,EAC7B;QAEC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAGXrE,WAAW,iBAAInB,OAAA;UACbiF,SAAS,EAAC,mBAAmB;UAC7BU,OAAO,EAAExC,UAAW;UAAA+B,QAAA,EACnB;QAEC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAINxF,OAAA;MAAAkF,QAAA,gBACAlF,OAAA;QAAKiF,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BlF,OAAA;UAAIiF,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCxF,OAAA;UAAGiF,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eAENxF,OAAA;QAAKiF,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClClF,OAAA;UAAKiF,SAAS,EAAC,iCAAiC;UAAAC,QAAA,gBAC9ClF,OAAA;YAAIiF,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3DxF,OAAA;YAAKiF,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAG1B,CAAC;cAACY,EAAE,EAAE,EAAE;cAAEC,IAAI,EAAE;YAAc,CAAC,EAAC,GAAG5F,UAAU,CAAC,CAAC6B,GAAG,CAAEgE,QAAQ,iBAC1DhG,OAAA;cAEAiG,KAAK,EAAED,QAAQ,CAACF,EAAG;cACnBH,OAAO,EAAIA,CAAA,KAAInF,mBAAmB,CAACwF,QAAQ,CAACF,EAAE,CAAE;cAChDb,SAAS,EAAE1E,gBAAgB,KAAKyF,QAAQ,CAACF,EAAE,GAAG,UAAU,GAAG,YAAa;cAAAZ,QAAA,EACrEc,QAAQ,CAACD;YAAI,GAJTC,QAAQ,CAACF,EAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKR,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENxF,OAAA;UAAKiF,SAAS,EAAC,kCAAkC;UAAAC,QAAA,gBAC/ClF,OAAA;YAAIiF,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtExF,OAAA;YAAKiF,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EACjC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAClD,GAAG,CAAEkE,GAAG,iBAChClG,OAAA;cAEEiG,KAAK,EAAEC,GAAI;cACXjB,SAAS,EAAExE,cAAc,KAAKyF,GAAG,GAAG,UAAU,GAAG,YAAa;cAC9DP,OAAO,EAAEA,CAAA,KAAMjF,iBAAiB,CAACwF,GAAG,CAAE;cAAAhB,QAAA,EAErCgB;YAAG,GALCA,GAAG;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMF,CACb;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC,eAENxF,OAAA;UAAKiF,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChDlF,OAAA;YAAIiF,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7DxF,OAAA;YAAKiF,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAE9B,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAClD,GAAG,CAAEmE,KAAK,iBAEvCnG,OAAA;cAEEiG,KAAK,EAAEE,KAAM;cACblB,SAAS,EAAEtE,UAAU,KAAKwF,KAAK,GAAG,UAAU,GAAG,YAAa;cAC5DR,OAAO,EAAEA,CAAA,KAAI/E,aAAa,CAACuF,KAAK,CAAE;cAAAjB,QAAA,EACjCiB,KAAK,IAAI;YAAgB,GAJrBA,KAAK;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKJ,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAED,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC,eAENxF,OAAA;UAAKiF,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC1ClF,OAAA;YAAIiF,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAgB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnExF,OAAA;YAAKiF,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC/B,CAAC,EAAE,EAAE,UAAU,EAAE,SAAS,CAAC,CAAClD,GAAG,CAAEoE,IAAI,iBACpCpG,OAAA;cAAQiG,KAAK,EAAEG,IAAK;cAEpBnB,SAAS,EAAGpE,YAAY,KAAKuF,IAAI,GAAG,UAAU,GAAG,YAAa;cAC9DT,OAAO,EAAEA,CAAA,KAAK7E,eAAe,CAACsF,IAAI,CAAE;cAAAlB,QAAA,EACjCkB,IAAI,IAAI;YAAU,GAHhBA,IAAI;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIC,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGH,CAAC,eACNxF,OAAA;QAAKiF,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC7BlF,OAAA;UACAiF,SAAS,EAAC,WAAW;UACrBU,OAAO,EAAEvC,iBAAkB;UAC3ByC,QAAQ,EAAEhE,mBAAoB;UAAAqD,QAAA,EAAE;QAE9B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV;AAACtF,EAAA,CAhVQD,GAAG;AAAAoG,EAAA,GAAHpG,GAAG;AAkVZ,eAAeA,GAAG;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}